{"version":3,"file":"695.js","mappings":"8NAQA,MAwEA,EAxEc,KACZ,MAAM,KAAEA,EAAF,MAAQC,EAAR,WAAeC,EAAf,OAA2BC,IAAWC,EAAAA,EAAAA,IAAO,kCAAmCC,EAAAA,EAAS,CAC3FC,iBAAkB,OAGfC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAOC,IAAiBC,EAAAA,EAAAA,GAAS,KACjCC,EAAUC,IAAoBF,EAAAA,EAAAA,GAAS,IACxCG,GAAWC,EAAAA,EAAAA,cACdC,IACCA,EAAEC,iBACFV,GAAc,GACdW,IAAAA,KAEI,mBACA,CAAET,MAAAA,EAAOG,SAAAA,GAAW,CAChBO,iBAAgB,IAIrBC,MAAMC,IACHpB,OAGHqB,OAAOtB,IACNO,EAAmD,MAArCP,EAAMqB,UAAUtB,MAAMwB,iBAG1C,CAACd,EAAOG,IAGV,YAAaY,IAATzB,EACK,qCAGLA,EACK,gBAAC,KAAD,CAAU0B,GAAG,uBAUpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMZ,SAAUA,GACd,gBAAC,KAAD,CAAOY,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQC,MAAOpB,EAAOqB,SAAUpB,MAGxE,gBAAC,KAAD,CAAOgB,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWC,MAAOjB,EAAUkB,SAAUjB,KAEjFP,GAAc,gBAAC,KAAD,kCAEjB,gBAAC,KAAD,CAAQqB,KAAK,UAAb,QAEF,gBAAC,KAAD,sBAEE,gBAAC,KAAD,CAAMF,GAAG,WAAT","sources":["webpack://alecture/./pages/LogIn/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from '@pages/SignUp/styles';\nimport axios from 'axios';\nimport React, { useCallback, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\n\nconst LogIn = () => {\n  const { data, error, revalidate, mutate } = useSWR('http://localhost:3095/api/users', fetcher, {\n      dedupingInterval: 100000, \n  });\n\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          '/api/users/login',\n          { email, password },{\n              withCredentials:true,\n          }\n          \n        )\n        .then((response) => {\n            revalidate();\n           // mutate(response.data, false);//optimistic ui\n        })\n        .catch((error) => {\n          setLogInError(error.response?.data?.statusCode === 401);\n        });\n    },\n    [email, password],\n  );\n\n  if (data === undefined) {\n    return <div>로딩중...</div>;\n  }\n\n  if (data) {\n    return <Redirect to=\"/workspace/channel\" />; //리액트 라우터의 페이지를 해당 주소로 옮겨라라는 뜻\n  }\n\n  // console.log(error, userData);\n  // if (!error && userData) {\n  //   console.log('로그인됨', userData);\n  //   return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  // }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <Link to=\"/signup\">회원가입 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default LogIn;"],"names":["data","error","revalidate","mutate","useSWR","fetcher","dedupingInterval","logInError","setLogInError","useState","email","onChangeEmail","useInput","password","onChangePassword","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","response","catch","statusCode","undefined","to","id","type","name","value","onChange"],"sourceRoot":""}